# -*- coding: utf-8 -*-
"""LinearRegression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DfzRrDprPSNObvjRn7f8OzA1R_fD4dSz
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#Important
from sklearn import linear_model

"""NumPy: NumPy is a library for scientific computing in Python. It provides support for large, multi-dimensional arrays and matrices of numerical data, as well as a large collection of mathematical functions to operate on these arrays.

Pandas: Pandas is a library for data manipulation and analysis. It provides data structures for efficiently storing and manipulating large datasets, as well as tools for working with missing or incomplete data.

Scikit-learn: Scikit-learn is a library for machine learning in Python. It provides a wide range of algorithms for tasks such as classification, regression, clustering, and dimensionality reduction, as well as tools for model selection and evaluation.

from sklearn import linear_model is a statement in Python that imports the linear_model module from the sklearn library.
"""

df=pd.read_csv('/content/drive/MyDrive/DataScience/homeprices.csv')
df

plt.scatter(df.area,df.price,color='red',marker='+')
plt.xlabel('Area (Sq. ft) ',fontsize=20)
plt.ylabel('Price (USD) ',fontsize=20)

reg=linear_model.LinearRegression()
reg.fit(df[['area']],df.price)

reg.predict([[3300]])

reg.coef_

reg.intercept_

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline 
plt.xlabel('Area (Sq. ft)', fontsize=20)
plt.ylabel('Price (USD)', fontsize=20)
plt.scatter(df.area,df.price,color='red',marker='+')
plt.plot(df.area,reg.predict(df[['area']]),color='blue')

# y = mx + b
#where, y is Price 
#       m is slope or Gradient (Coefficient)
#       x is Area 
#       b is Intercept

Price = (135.78767123*3300)+180616.43835616432
print(Price)

df1 = pd.read_csv('/content/drive/MyDrive/DataScience/areas.csv')
print(df1)

print(df1.head(3))

price1 = reg.predict(df1)
price1

df1['price1'] = price1
df1

df1.to_csv("prediction_of_house_price_given_area_using_linear_regression_concept.csv", index=False)

pd.read_csv('prediction_of_house_price_given_area_using_linear_regression_concept.csv')